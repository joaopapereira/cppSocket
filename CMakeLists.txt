#
# File generated by CMakeBuilder
#
#
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
SET(CMAKE_BUILD_TYPE Debug)
IF( DEFINED ENV{INSTALL_LIB_DIR} )
   SET(INSTALL_LIBS $ENV{INSTALL_LIB_DIR}/ )
ELSE()
   SET(INSTALL_LIBS ${CMAKE_HOME_DIRECTORY}/lib )
ENDIF()
IF( DEFINED ENV{INSTALL_INC_DIR} )
   SET(INSTALL_INCS $ENV{INSTALL_INC_DIR}/ )
ELSE()
   SET(INSTALL_INCS ${CMAKE_HOME_DIRECTORY}/include )
ENDIF()
IF( EXISTS ${INSTALL_LIBS}/libJPSockets.a )
	return()
ENDIF()


set(CMAKE_CXX_FLAGS "-g")


SET(LIBRARY_OUTPUT_PATH .)
SET(EXECUTABLE_OUTPUT_PATH .)

PROJECT ( JPSocketsLib CXX )
INCLUDE_DIRECTORIES( include lib ${INSTALL_LIBS} ${INSTALL_INCS})

ADD_SUBDIRECTORY( src lib )
ADD_SUBDIRECTORY( exampleProgram bin )
#####################################
# Search for needed lib
#####################################
FIND_LIBRARY( JPLoggerStatic REQUIRED)
FIND_LIBRARY( LOGGER_LIBRARY NAMES logger
                PATHS ${LOCAL_LIBS} ${INSTALL_LIBS} )
SET( LIBS ${LIBS} ${LOGGER_LIBRARY})
message(${LIBS})
message(${INSTALL_LIBS})

#include_directories(${logger_INCLUDE_DIRS} ${JPSemaphore_INCLUDE_DIRS})

#####################################
# Instalation section
#####################################
INSTALL( FILES include/libJPSocket.hpp
         DESTINATION ${INSTALL_INCS} )

INSTALL( FILES lib/libJPSockets.a
         DESTINATION ${INSTALL_LIBS} )



IF( UNIX )
   ADD_CUSTOM_TARGET( distclean @@echo cleaning for source distribution)
  SET(DISTCLEANED
   cmake.depends
   cmake.check_depends
   CMakeCache.txt
   cmake.check_cache
   cmake*.cmake
   Makefile
   core core.*
   gmon.out
   *~
   CMakeFiles 
   bin
   lib
  )

  ADD_CUSTOM_COMMAND(
    DEPENDS clean
    COMMENT "distribution clean"
    COMMAND rm
    ARGS    -Rf CMakeTmp ${DISTCLEANED}
    TARGET  distclean
  )
  ADD_CUSTOM_COMMAND(
    COMMENT "Generate Examples"
    COMMAND make -C examples
    TARGET  examples
  )
ENDIF( UNIX )


